# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt6 UI code generator 6.9.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6.QtWidgets import QWidget, QPushButton, QLineEdit, QLabel
from PyQt6 import uic
from PyQt6.QtCore import Qt
from PyQt6.QtWidgets import QApplication

from utils.validators import validate_user

from views.preferences_admin import AdminPreferencesWindow
from views.preferences import UserPreferencesWindow

class LoginWindow(QWidget):
    def __init__(self):
        super().__init__()
        uic.loadUi(r"ui\login.ui", self)  # UI dosyasını yükle
        
        # Frameless and transparent window
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)


        # ✅ Widget'ları doğru türle bul
        self.loginButton = self.findChild(QPushButton, "loginButton")
        self.exitButton = self.findChild(QPushButton, "exitButton")
        self.usernameField = self.findChild(QLineEdit, "usernameField")
        self.passwordField = self.findChild(QLineEdit, "passwordField")
        self.errorlabel = self.findChild(QLabel, "errorlabel")
        self.showPasswordCheckBox = self.findChild(QWidget, "showPasswordCheckBox")
        self.passwordField.setEchoMode(QLineEdit.EchoMode.Password)  # Başlangıçta gizli

        self.showPasswordCheckBox.toggled.connect(self.toggle_password_visibility)
        self.loginButton.clicked.connect(self.handle_login)
        self.exitButton.clicked.connect(self.close_app)


    def handle_login(self):
        role = validate_user(self.usernameField.text(), self.passwordField.text())
        if role:
            self.errorlabel.setText(f"Giriş başarılı! Rol: {role}")
            self.open_preferences(role)
            # Burada rol'e göre yönlendirme yapabilirsiniz
            # Örneğin, admin ise admin paneline, normal kullanıcı ise kullanıcı paneline yönlendirebilirsiniz
        else:
            self.errorlabel.setText("Kullanıcı adı veya şifre yanlış!")
            self.usernameField.clear()
            self.passwordField.clear()
    
    def open_preferences(self, role):

        if role == "admin":
            self.preferences_window = AdminPreferencesWindow()
        else:
            self.preferences_window = UserPreferencesWindow()
        
        self.preferences_window.show()
        self.close()

    def close_app(self):
        QApplication.quit()
        
    def toggle_password_visibility(self, checked):
        if checked:
            self.passwordField.setEchoMode(QLineEdit.EchoMode.Normal)  # Şifreyi göster
        else:
            self.passwordField.setEchoMode(QLineEdit.EchoMode.Password)  # Şifreyi gizle
